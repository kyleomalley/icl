---
- hosts: k8s_controller_group, k8s_worker_group
  become: true
  tasks:

    - name: Import the GPG key for EPEL
      ansible.builtin.rpm_key:
        state: present
        key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-9
  
    - name: Download the EPEL repository package
      ansible.builtin.get_url:
        url: https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
        dest: /tmp/epel-release-latest-9.noarch.rpm

    - name: Install the EPEL repository
      ansible.builtin.yum:
        name: /tmp/epel-release-latest-9.noarch.rpm
        state: present

    - name: Install dependencies and Kubernetes components
      ansible.builtin.yum:
        name:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
          - iproute-tc
          - containerd.io
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Enable and start containerd service
      ansible.builtin.systemd:
        name: containerd
        enabled: true
        state: started

    - name: Configure containerd as the container runtime
      ansible.builtin.command:
        cmd: "mkdir -p /etc/containerd && containerd config default > /etc/containerd/config.toml"
      args:
        creates: /etc/containerd/config.toml

    - name: Restart containerd to apply configuration
      ansible.builtin.systemd:
        name: containerd
        state: restarted

    - name: Disable swap (temporary)
      ansible.builtin.command:
        cmd: "swapoff -a"
    
    - name: Disable swap permanently
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^\s*swap\s+'
        replace: '#swap'

    - name: Enable and start kubelet
      ansible.builtin.systemd:
        name: kubelet
        enabled: true
        state: started

- hosts: k8s_controller
  become: true
  tasks:
    - name: Initialize Kubernetes cluster on controller (with containerd)
      ansible.builtin.command:
        cmd: "kubeadm init --pod-network-cidr=10.244.0.0/16 --cri-socket /run/containerd/containerd.sock"
      register: kubeadm_init
      changed_when: "'kubeadm init' in kubeadm_init.stdout"

    - name: Create .kube directory for kubectl config
      ansible.builtin.file:
        path: /root/.kube
        state: directory
        mode: '0700'

    - name: Move kubeconfig to .kube directory
      ansible.builtin.command:
        cmd: "cp /etc/kubernetes/admin.conf /root/.kube/config"
      when: kubeadm_init is changed

    - name: Apply Flannel CNI plugin
      ansible.builtin.command:
        cmd: "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"
      when: kubeadm_init is changed

    - name: Get the kubeadm join command for worker node
      ansible.builtin.command:
        cmd: "kubeadm token create --print-join-command"
      register: kubeadm_join_cmd

- hosts: k8s_worker_group
  become: true
  tasks:
    - name: Run the kubeadm join command on the worker node
      ansible.builtin.command:
        cmd: "{{ hostvars['kubernetes_controller']['kubeadm_join_cmd'].stdout }} --cri-socket /run/containerd/containerd.sock"